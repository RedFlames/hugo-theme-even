!function(U){var B={};function s(Q){if(B[Q])return B[Q].exports;var F=B[Q]={i:Q,l:!1,exports:{}};return U[Q].call(F.exports,F,F.exports,s),F.l=!0,F.exports}s.m=U,s.c=B,s.d=function(Q,F,U){s.o(Q,F)||Object.defineProperty(Q,F,{enumerable:!0,get:U})},s.r=function(Q){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},s.t=function(F,Q){if(1&Q&&(F=s(F)),8&Q)return F;if(4&Q&&"object"==typeof F&&F&&F.__esModule)return F;var U=Object.create(null);if(s.r(U),Object.defineProperty(U,"default",{enumerable:!0,value:F}),2&Q&&"string"!=typeof F)for(var B in F)s.d(U,B,function(Q){return F[Q]}.bind(null,B));return U},s.n=function(Q){var F=Q&&Q.__esModule?function(){return Q.default}:function(){return Q};return s.d(F,"a",F),F},s.o=function(Q,F){return Object.prototype.hasOwnProperty.call(Q,F)},s.p="",s(s.s=1)}([function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY3NzL3N0eWxlLnNjc3M/OTExMyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///0\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./src/js/even.js\n\n\nvar Even = {};\n\nEven.backToTop = function () {\n  var $backToTop = $('#back-to-top');\n  $(window).scroll(function () {\n    if ($(window).scrollTop() > 100) {\n      $backToTop.fadeIn(1000);\n    } else {\n      $backToTop.fadeOut(1000);\n    }\n  });\n  $backToTop.click(function () {\n    $('body,html').animate({\n      scrollTop: 0\n    });\n  });\n};\n\nEven.mobileNavbar = function () {\n  var $mobileNav = $('#mobile-navbar');\n  var $mobileNavIcon = $('.mobile-navbar-icon');\n  var slideout = new Slideout({\n    'panel': document.getElementById('mobile-panel'),\n    'menu': document.getElementById('mobile-menu'),\n    'padding': 180,\n    'tolerance': 70\n  });\n  slideout.disableTouch();\n  $mobileNavIcon.click(function () {\n    slideout.toggle();\n  });\n  slideout.on('beforeopen', function () {\n    $mobileNav.addClass('fixed-open');\n    $mobileNavIcon.addClass('icon-click').removeClass('icon-out');\n  });\n  slideout.on('beforeclose', function () {\n    $mobileNav.removeClass('fixed-open');\n    $mobileNavIcon.addClass('icon-out').removeClass('icon-click');\n  });\n  $('#mobile-panel').on('touchend', function () {\n    slideout.isOpen() && $mobileNavIcon.click();\n  });\n};\n\nEven._initToc = function () {\n  var SPACING = 20;\n  var $toc = $('.post-toc');\n  var $footer = $('.post-footer');\n\n  if ($toc.length) {\n    var minScrollTop = $toc.offset().top - SPACING;\n    var maxScrollTop = $footer.offset().top - $toc.height() - SPACING;\n    var tocState = {\n      start: {\n        'position': 'absolute',\n        'top': minScrollTop\n      },\n      process: {\n        'position': 'fixed',\n        'top': SPACING\n      },\n      end: {\n        'position': 'absolute',\n        'top': maxScrollTop\n      }\n    };\n    $(window).scroll(function () {\n      var scrollTop = $(window).scrollTop();\n\n      if (scrollTop < minScrollTop) {\n        $toc.css(tocState.start);\n      } else if (scrollTop > maxScrollTop) {\n        $toc.css(tocState.end);\n      } else {\n        $toc.css(tocState.process);\n      }\n    });\n  }\n\n  var HEADERFIX = 30;\n  var $toclink = $('.toc-link');\n  var $headerlink = $('.headerlink');\n  var $tocLinkLis = $('.post-toc-content li');\n  var headerlinkTop = $.map($headerlink, function (link) {\n    return $(link).offset().top;\n  });\n  var headerLinksOffsetForSearch = $.map(headerlinkTop, function (offset) {\n    return offset - HEADERFIX;\n  });\n\n  var searchActiveTocIndex = function searchActiveTocIndex(array, target) {\n    for (var i = 0; i < array.length - 1; i++) {\n      if (target > array[i] && target <= array[i + 1]) return i;\n    }\n\n    if (target > array[array.length - 1]) return array.length - 1;\n    return -1;\n  };\n\n  $(window).scroll(function () {\n    var scrollTop = $(window).scrollTop();\n    var activeTocIndex = searchActiveTocIndex(headerLinksOffsetForSearch, scrollTop);\n    $($toclink).removeClass('active');\n    $($tocLinkLis).removeClass('has-active');\n\n    if (activeTocIndex !== -1) {\n      $($toclink[activeTocIndex]).addClass('active');\n      var ancestor = $toclink[activeTocIndex].parentNode;\n\n      while (ancestor.tagName !== 'NAV') {\n        $(ancestor).addClass('has-active');\n        ancestor = ancestor.parentNode.parentNode;\n      }\n    }\n  });\n};\n\nEven.fancybox = function () {\n  if ($.fancybox) {\n    $('.post-content').each(function () {\n      $(this).find('img').each(function () {\n        $(this).wrap(\"<a class=\\\"fancybox\\\" href=\\\"\".concat(this.src, \"\\\" data-fancybox=\\\"gallery\\\" data-caption=\\\"\").concat(this.title, \"\\\"></a>\"));\n      });\n    });\n    $('.fancybox').fancybox({\n      selector: '.fancybox',\n      protect: true\n    });\n  }\n};\n\nEven.highlight = function () {\n  var blocks = document.querySelectorAll('pre code');\n\n  for (var i = 0; i < blocks.length; i++) {\n    var block = blocks[i];\n    var rootElement = block.parentElement;\n    var lineCodes = block.innerHTML.split(/\\n/);\n    if (lineCodes[lineCodes.length - 1] === '') lineCodes.pop();\n    var lineLength = lineCodes.length;\n    var codeLineHtml = '';\n\n    for (var _i = 0; _i < lineLength; _i++) {\n      codeLineHtml += \"<div class=\\\"line\\\">\".concat(_i + 1, \"</div>\");\n    }\n\n    var codeHtml = '';\n\n    for (var _i2 = 0; _i2 < lineLength; _i2++) {\n      codeHtml += \"<div class=\\\"line\\\">\".concat(lineCodes[_i2], \"</div>\");\n    }\n\n    block.className += ' highlight';\n    var figure = document.createElement('figure');\n    figure.className = block.className;\n    figure.innerHTML = \"<table><tbody><tr><td class=\\\"gutter\\\"><pre>\".concat(codeLineHtml, \"</pre></td><td class=\\\"code\\\"><pre>\").concat(codeHtml, \"</pre></td></tr></tbody></table>\");\n    rootElement.parentElement.replaceChild(figure, rootElement);\n  }\n};\n\nEven.chroma = function () {\n  var blocks = document.querySelectorAll('.highlight > .chroma');\n\n  for (var i = 0; i < blocks.length; i++) {\n    var block = blocks[i];\n    var afterHighLight = block.querySelector('pre.chroma > code');\n    var lang = afterHighLight ? afterHighLight.className : '';\n    block.className += ' ' + lang;\n  }\n};\n\nEven.toc = function () {\n  var tocContainer = document.getElementById('post-toc');\n\n  if (tocContainer !== null) {\n    var toc = document.getElementById('TableOfContents');\n\n    if (toc === null) {\n      // toc = true, but there are no headings\n      tocContainer.parentNode.removeChild(tocContainer);\n    } else {\n      this._refactorToc(toc);\n\n      this._linkToc();\n\n      this._initToc();\n    }\n  }\n};\n\nEven._refactorToc = function (toc) {\n  // when headings do not start with `h1`\n  var oldTocList = toc.children[0];\n  var newTocList = oldTocList;\n  var temp;\n\n  while (newTocList.children.length === 1 && (temp = newTocList.children[0].children[0]).tagName === 'UL') {\n    newTocList = temp;\n  }\n\n  if (newTocList !== oldTocList) toc.replaceChild(newTocList, oldTocList);\n};\n\nEven._linkToc = function () {\n  var links = document.querySelectorAll('#TableOfContents a:first-child');\n\n  for (var i = 0; i < links.length; i++) {\n    links[i].className += ' toc-link';\n  }\n\n  for (var num = 1; num <= 6; num++) {\n    var headers = document.querySelectorAll('.post-content>h' + num);\n\n    for (var _i3 = 0; _i3 < headers.length; _i3++) {\n      var header = headers[_i3];\n      header.innerHTML = \"<a href=\\\"#\".concat(header.id, \"\\\" class=\\\"headerlink anchor\\\"><i class=\\\"iconfont icon-link\\\"></i></a>\").concat(header.innerHTML);\n    }\n  }\n};\n\nEven.flowchart = function () {\n  if (!window.flowchart) return;\n  var blocks = document.querySelectorAll('pre code.language-flowchart, pre code.language-flow');\n\n  for (var i = 0; i < blocks.length; i++) {\n    if (!window.hljs && i % 2 === 0) continue;\n    var block = blocks[i];\n    var rootElement = window.hljs ? block.parentElement : block.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement;\n    var container = document.createElement('div');\n    var id = \"js-flowchart-diagrams-\".concat(i);\n    container.id = id;\n    container.className = 'align-center';\n    rootElement.parentElement.replaceChild(container, rootElement);\n    var diagram = flowchart.parse(block.childNodes[0].nodeValue);\n    diagram.drawSVG(id, window.flowchartDiagramsOptions ? window.flowchartDiagramsOptions : {});\n  }\n};\n\nEven.sequence = function () {\n  if (!window.Diagram) return;\n  var blocks = document.querySelectorAll('pre code.language-sequence');\n\n  for (var i = 0; i < blocks.length; i++) {\n    if (!window.hljs && i % 2 === 0) continue;\n    var block = blocks[i];\n    var rootElement = window.hljs ? block.parentElement : block.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement;\n    var container = document.createElement('div');\n    var id = \"js-sequence-diagrams-\".concat(i);\n    container.id = id;\n    container.className = 'align-center';\n    rootElement.parentElement.replaceChild(container, rootElement);\n    var diagram = Diagram.parse(block.childNodes[0].nodeValue);\n    diagram.drawSVG(id, window.sequenceDiagramsOptions ? window.sequenceDiagramsOptions : {\n      theme: 'simple'\n    });\n  }\n};\n\nEven.responsiveTable = function () {\n  var tables = document.querySelectorAll('.post-content > table');\n\n  for (var i = 0; i < tables.length; i++) {\n    var table = tables[i];\n    var wrapper = document.createElement('div');\n    wrapper.className = 'table-wrapper';\n    table.parentElement.replaceChild(wrapper, table);\n    wrapper.appendChild(table);\n  }\n};\n\n\n// EXTERNAL MODULE: ./src/css/style.scss\nvar style = __webpack_require__(0);\n\n// CONCATENATED MODULE: ./src/js/main.js\n\n\n$(document).ready(function () {\n  Even.backToTop();\n  Even.mobileNavbar();\n  Even.toc();\n  Even.fancybox();\n});\nEven.responsiveTable();\nEven.flowchart();\nEven.sequence();\n\nif (window.hljs) {\n  hljs.initHighlighting();\n  Even.highlight();\n} else {\n  Even.chroma();\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n")}]);